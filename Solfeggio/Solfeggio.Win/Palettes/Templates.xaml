<ResourceDictionary
	xmlns="http://xamarin.com/schemas/2014/forms"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:models="clr-namespace:Solfeggio.Models"
	xmlns:controls="clr-namespace:Solfeggio.Controls"
	xmlns:presenters="clr-namespace:Solfeggio.Presenters"
	xmlns:viewModels="clr-namespace:Solfeggio.ViewModels"
	xmlns:views="clr-namespace:Solfeggio.Views"
	xmlns:local="clr-namespace:Solfeggio">

	<DataTemplate
		x:Key="HarmonicTemplate">
		<Grid
			Opacity="{Binding Magnitude, Converter={StaticResource HarmonicOpacityConverter}}"
			Rack.Columns="2* 2* 2* * * * *"
			Rack.Rows="* *">

			<Slider
				Rack.Cell="C0 R1"
				Minimum="+0.0"
				Maximum="+1.0"
				TickFrequency="0.01"
				TickPlacement="TopLeft"
				Value="{Binding Magnitude, StringFormat=F2}" />
			<Slider
				Rack.Cell="C1 R1"
				TickFrequency="100"
				TickPlacement="TopLeft"
				Minimum="{StoreBinding StoreKey=presenters:MusicalPresenter, Path=Spectrum.Frequency.Threshold.Lower}"
				Maximum="{StoreBinding StoreKey=presenters:MusicalPresenter, Path=Spectrum.Frequency.Threshold.Upper}"
				Value="{Binding Frequency, StringFormat=F2}" />
			<Slider
				Rack.Cell="C2 R1"
				TickFrequency="0.207"
				TickPlacement="TopLeft"
				Minimum="{StaticResource MinusSinglePi}"
				Maximum="{StaticResource PlusSinglePi}"
				Value="{Binding Phase, StringFormat=F2}" />

			<Entry
				Rack.Cell="C0 R0"
				Text="{Binding Magnitude, StringFormat=F2, UpdateSourceTrigger=PropertyChanged}" />
			<Entry
				Rack.Cell="C1 R0"
				Text="{Binding Frequency, StringFormat=F2, UpdateSourceTrigger=PropertyChanged}" />
			<Entry
				Rack.Cell="C2 R0"
				Text="{Binding Phase, StringFormat=F2, UpdateSourceTrigger=PropertyChanged}" />
			<Entry
				Rack.Cell="C3 R2"
				Text="{Binding Gap, StringFormat=F2, UpdateSourceTrigger=PropertyChanged}" />
			<Picker
				Rack.Cell="C3 R0"
				ItemsSource="{Binding BasisFuncs}"
				SelectedItem="{Binding BasisFunc, Mode=TwoWay}"
				ItemDisplayBinding="{Binding Converter={StaticResource DelegateToNameConverter}}" />
			<Picker
				Rack.Cell="C4 R0"
				ItemsSource="{Enum Type=models:PhaseMode}"
				SelectedItem="{Binding PhaseMode, Mode=TwoWay}" />

			<Switch
				Rack.Cell="C5 R0"
				HorizontalAlignment="Right"
				IsToggled="{Binding IsEnabled, Mode=TwoWay}" />

			<StackLayout
				Rack.Cell="C6 R0"
				Orientation="Horizontal"
				HorizontalAlignment="Right">
				<Button
					Content="✗"
					CommandParameter="{Binding}"
					Command="{Context Key=Set.Delete, StoreKey=viewModels:HarmonicManager, KeyPath=ActiveProfile}" />
			</StackLayout>
		</Grid>
	</DataTemplate>

	<DataTemplate
		x:Key="ProfileHeaderTemplate">
		<StackLayout
			Orientation="Horizontal">
			<Label
				Text="{Binding Title}" />
			<!--<Button
				Content="✗"
				Command="{Context Key=Set.Delete, StoreKey=local:Generator}"
				CommandParameter="{Binding}" />-->
		</StackLayout>
	</DataTemplate>

	<DataTemplate
		x:Key="ProcessingProfileTemplate">
		<ItemsView
			DataContext="{StoreBinding StoreKey=viewModels:ProcessingManager, Path=ActiveProfile}"
			ItemsSource="{StaticResource ProcessingProfileOptionsSet}"
			ItemTemplate="{StaticResource OptionTemplate}" />
	</DataTemplate>

	<DataTemplate
		x:Key="HarmonicProfileTemplate">
		<StackLayout>
			<StackLayout
				Orientation="Horizontal">
				<Label
					Text="{Localizing Key=Title}" />
				<Entry
					Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
				<Button
					Content="✗"
					CommandParameter="{Binding}"
					Command="{Context Key=Set.Delete, StoreKey=viewModels:HarmonicManager, TrackedPath=CommandParameter}" />
			</StackLayout>

			<Grid
				Rack.Columns="2* 2* 2* * * * *"
				Rack.Rows="* *">
				<Label
					Rack.Cell="C0"
					Text="{Localizing Key=Magnitude}" />
				<Label
					Rack.Cell="C1"
					Text="{Localizing Key=Frequency}" />
				<Label
					Rack.Cell="C2"
					Text="{Localizing Key=Phase}" />
				<Label
					Rack.Cell="C3"
					Text="{Localizing Key=Basis}" />
				<Label
					Rack.Cell="C4"
					Text="{Localizing Key=Mode}" />
				<Label
					Rack.Cell="C5"
					Text="{Localizing Key=Sound}" />
				<Label
					Rack.Cell="C6"
					Text="{Localizing Key=Action}" />
			</Grid>

			<ItemsView
				ItemsSource="{Binding Harmonics}"
				ItemTemplate="{StaticResource HarmonicTemplate}" />

			<Button
				HorizontalAlignment="Center"
				Content="{Localizing Key=Create}"
				Command="{Context Key=Set.Create, TrackedPath=DataContext}" />
		</StackLayout>
	</DataTemplate>

	<DataTemplate
		x:Key="HarmonicOutTemplate">
		<Grid
			Opacity="{Binding Harmonic.Magnitude, Converter={StaticResource HarmonicOpacityConverter}}"
			Rack.Columns="* * * * *">
			<Label
				Rack.Cell="C0"
				Text="{Binding Harmonic.Magnitude, StringFormat=F2}" />
			<Label
				Rack.Cell="C1"
				Text="{Binding Harmonic.Frequency, StringFormat=F2}" />
			<Label
				Rack.Cell="C2"
				Text="{Binding DeltaFrequency, StringFormat={}({0:+0.00;-0.00;0.00})}" />
			<Label
				Rack.Cell="C3"
				Text="{Binding EthalonFrequency, StringFormat=F2}" />
			<Label
				Rack.Cell="C4"
				Text="{Binding NoteName}" />
		</Grid>
	</DataTemplate>

	<DataTemplate
		x:Key="OptionTemplate">
		<Grid
			Rack.Columns="7* 5* *">
			<ContentPresenter
				Rack.Cell="C0"
				Content="{Binding Tag}" />
			<ContentPresenter
				Rack.Cell="C1"
				Content="{Binding}" />
		</Grid>
	</DataTemplate>

	<DataTemplate
		x:Key="RangeGridTemplate">

		<Grid
			Rack.Rows="^ ^ ^ ^"
			Rack.Columns="^ ^ ^"
			HorizontalAlignment="Center">

			<Label
				Rack.Cell="R0 C0"
				Text="" />

			<Label
				Rack.Cell="R1 C0"
				Text="{Localizing Key=Upper}" />
			<Label
				Rack.Cell="R2 C0"
				Text="{Localizing Key=Lower}" />
			<Label
				Rack.Cell="R3 C0"
				IsEnabled="False"
				Opacity="{StaticResource InfoTextOpacityLevel}"
				Text="{Localizing Key=Length}" />

			<Label
				Rack.Cell="R0 C1"
				Text="{Localizing Key=Threshold}" />
			<Label
				Rack.Cell="R0 C2"
				Text="{Localizing Key=Limit}" />

			<Entry
				Rack.Cell="R1 C1"
				Text="{Binding Threshold.Upper, Mode=TwoWay, StringFormat={StaticResource DefaultStringFormat}}" />
			<Entry
				Rack.Cell="R2 C1"
				Text="{Binding Threshold.Lower, Mode=TwoWay, StringFormat={StaticResource DefaultStringFormat}}" />
			<Entry
				Rack.Cell="R1 C2"
				Text="{Binding Limit.Upper, Mode=TwoWay, StringFormat={StaticResource DefaultStringFormat}}" />
			<Entry
				Rack.Cell="R2 C2"
				Text="{Binding Limit.Lower, Mode=TwoWay, StringFormat={StaticResource DefaultStringFormat}}" />

			<Entry
				Rack.Cell="R3 C1"
				IsEnabled="False"
				Opacity="{StaticResource InfoTextOpacityLevel}"
				Text="{Binding Threshold.Length, Mode=OneWay, StringFormat={StaticResource DefaultStringFormat}}" />
			<Entry
				Rack.Cell="R3 C2"
				IsEnabled="False"
				Opacity="{StaticResource InfoTextOpacityLevel}"
				Text="{Binding Limit.Length, Mode=OneWay, StringFormat={StaticResource DefaultStringFormat}}" />
		</Grid>

	</DataTemplate>

	<DataTemplate
		x:Key="RangeTemplate">
		<StackLayout
			Margin="0 -24 0 0"
			HorizontalAlignment="Stretch">

			<Switch
				Rack.Cell="R0"
				HorizontalAlignment="Right"
				IsToggled="{Binding IsVisible, Mode=TwoWay}" />

			<ContentPresenter
				Content="{Binding}"
				ContentTemplate="{StaticResource RangeGridTemplate}" />

			<controls:RangeBar
				Maximum="{Binding Limit.Upper, Mode=TwoWay}"
				Minimum="{Binding Limit.Lower, Mode=TwoWay}"
				SelectionEnd="{Binding Threshold.Upper, Mode=TwoWay}"
				SelectionStart="{Binding Threshold.Lower, Mode=TwoWay}" />

			<StackLayout
				Orientation="Horizontal"
				HorizontalAlignment="Center">

				<Label
					Text="{Localizing Key=Scale}" />

				<Picker
					ItemsSource="{Binding VisualScaleFuncs}"
					SelectedItem="{Binding VisualScaleFunc, Mode=TwoWay}"
					ItemDisplayBinding="{Binding Converter={StaticResource DelegateToNameConverter}}" />

			</StackLayout>

		</StackLayout>
	</DataTemplate>

	<DataTemplate
		x:Key="SpectrumTemplate">

		<Grid
			Rack.Columns="{Smart Key=Columns, DefaultValue='^ ^ ^ ^ ^'}">

			<Grid
				Rack.Cell="C0"
				Rack.Rows="^ ^"
				DataContext="{Binding Magnitude}">
				<Label
					Rack.Cell="R0"
					HorizontalAlignment="Center"
					Text="{Localizing Key=Magnitude}" />
				<ContentPresenter
					Rack.Cell="R1"
					Content="{Binding}"
					ContentTemplate="{StaticResource RangeTemplate}" />
			</Grid>

			<GridSplitter
				Rack.Cell="C1"
				Style="{StaticResource VerticalGridSplitter}" />

			<Grid
				Rack.Cell="C2"
				Rack.Rows="^ ^"
				DataContext="{Binding Frequency}">
				<Label
					Rack.Cell="R0"
					HorizontalAlignment="Center"
					Text="{Localizing Key=Frequency}" />
				<ContentPresenter
					Rack.Cell="R1"
					Content="{Binding}"
					ContentTemplate="{StaticResource RangeTemplate}" />
			</Grid>

			<GridSplitter
				Rack.Cell="C3"
				Style="{StaticResource VerticalGridSplitter}" />

			<Grid
				Rack.Cell="C4"
				Rack.Rows="^ ^"
				DataContext="{Binding Phase}">
				<Label
					Rack.Cell="R0"
					HorizontalAlignment="Center"
					Text="{Localizing Key=Phase}" />
				<ContentPresenter
					Rack.Cell="R1"
					Content="{Binding}"
					ContentTemplate="{StaticResource RangeTemplate}" />
			</Grid>

		</Grid>

	</DataTemplate>

	<DataTemplate
		x:Key="FrameTemplate">

		<Grid
			Rack.Columns="^ ^ ^ ^ ^">

			<Grid
				Rack.Cell="C0"
				Rack.Rows="^ ^"
				DataContext="{Binding Level}">
				<Label
					Rack.Cell="R0"
					HorizontalAlignment="Center"
					Text="{Localizing Key=Level}" />
				<ContentPresenter
					Rack.Cell="R1"
					Content="{Binding}"
					ContentTemplate="{StaticResource RangeTemplate}" />
			</Grid>

			<GridSplitter
				Rack.Cell="C1"
				Style="{StaticResource VerticalGridSplitter}" />

			<Grid
				Rack.Cell="C2"
				Rack.Rows="^ ^"
				DataContext="{Binding Offset}">
				<Label
					Rack.Cell="R0"
					HorizontalAlignment="Center"
					Text="{Localizing Key=Offset}" />
				<ContentPresenter
					Rack.Cell="R1"
					Content="{Binding}"
					ContentTemplate="{StaticResource RangeTemplate}" />
			</Grid>

			<GridSplitter
				Rack.Cell="C3"
				Style="{StaticResource VerticalGridSplitter}" />

		</Grid>

	</DataTemplate>

	<DataTemplate
		x:Key="MusicalStandardsTemplate">
		<ItemsView
			ItemTemplate="{StaticResource OptionTemplate}"
			ItemsSource="{StaticResource MusicalStandardsOptionsSet}" />
	</DataTemplate>

	<DataTemplate
		x:Key="NumericFormattingTemplate">
		<ItemsView
			ItemTemplate="{StaticResource OptionTemplate}"
			ItemsSource="{StaticResource NumericFormattingSet}" />
	</DataTemplate>

	<DataTemplate
		x:Key="ShowStateTemplate">
		<ItemsView
			ItemTemplate="{StaticResource OptionTemplate}"
			ItemsSource="{StaticResource ShowStateSet}" />
	</DataTemplate>

	<DataTemplate
		x:Key="VisualProfileTemplate">
		<StackLayout>
			<Entry
				Tag="{Binding FirstColor}"
				Text="{Binding FirstColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
			<Entry
				Tag="{Binding SecondColor}"
				Text="{Binding SecondColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
			<ItemsView
				ItemsSource="{Binding AppBrushes}">
				<ItemsView.ItemTemplate>
					<DataTemplate>
						<Picker
							Tag="{Binding Key}"
							ItemsSource="{StoreBinding Path=Brushes, StoreKey=models:VisualProfile}"
							SelectedItem="{Binding Value.Value, Mode=TwoWay}" />
					</DataTemplate>
				</ItemsView.ItemTemplate>
			</ItemsView>
			<ItemsView
				ItemsSource="{Binding AppFontSizes}">
				<ItemsView.ItemTemplate>
					<DataTemplate>
						<Picker
							Tag="{Binding Key}"
							ItemsSource="{StoreBinding Path=FontSizes, StoreKey=models:VisualProfile}"
							SelectedItem="{Binding Value.Value, Mode=TwoWay}" />
					</DataTemplate>
				</ItemsView.ItemTemplate>
			</ItemsView>
		</StackLayout>
	</DataTemplate>

	<DataTemplate
		x:Key="NamedColorTemplate">
		<StackLayout
			Orientation="Horizontal">
			<Frame
				Style="{StaticResource FrameStyle}"
				Background="{Binding Value}" />
			<Label
				Text="{Binding Value}" />
			<Label
				Text="{Binding Key}" />
		</StackLayout>
	</DataTemplate>

	<ControlTemplate
		x:Key="BrushPickerTemplate">
		<Expander
			x:Name="Root"
			Header="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}">
			<views:PopupView
				IsOpen="{Binding IsExpanded, ElementName=Root}">
				<views:BrushPicker
					Value="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" />
			</views:PopupView>
		</Expander>
	</ControlTemplate>

</ResourceDictionary>