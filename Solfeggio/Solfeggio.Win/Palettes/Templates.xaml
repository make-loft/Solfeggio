<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:m="clr-namespace:Solfeggio.Models"
	xmlns:c="clr-namespace:Solfeggio.Controls"
	xmlns:p="clr-namespace:Solfeggio.Presenters"
	xmlns:vm="clr-namespace:Solfeggio.ViewModels"
	xmlns:v="clr-namespace:Solfeggio.Views"
	xmlns:local="clr-namespace:Solfeggio"
	>

	<DataTemplate
		x:Key="DelegateToNameTemplate"
		>
		<Title
			Text="{Binding Converter={StaticResource DelegateToNameConverter}}"
			/>
	</DataTemplate>

	<DataTemplate
		x:Key="LocalizingTemplate"
		>
		<Title
			Text="{Binding Converter={StaticResource LocalizingConverter}}"
			/>
	</DataTemplate>

	<DataTemplate
		x:Key="NoteNameToFrequencyTemplate">
		<Rack
			Columns="* *"
			>

			<Border
				Rack.Cell="C0 CS2"
				Opacity="0.61"
				CornerRadius="4"
				Background="{Binding Converter={StaticResource PianoKeyToBrushConverter}}"
				/>
			<Title
				Rack.Cell="C0"
				FontWeight="SemiBold"
				FontFamily="Consolas"
				Text="{Binding NoteName}"
				/>
			<Title
				Rack.Cell="C1"
				FontFamily="Consolas"
				Text="{Binding EthalonFrequency, Converter={StaticResource DoubleToStringTwoWayConverter}}"
				/>
		</Rack>
	</DataTemplate>
	
	<DataTemplate
		x:Key="HarmonicTemplate">
		<Rack
			Opacity="{Binding Magnitude, Converter={StaticResource HarmonicOpacityConverter}}"
			Columns="2* 3* 3* * * * *"
			Rows="* *"
			>
			<Slider
				Rack.Cell="C0 R1"
				Minimum="+0.0"
				Maximum="+1.0"
				TickFrequency="0.01"
				TickPlacement="TopLeft"
				Value="{Binding Magnitude}"
				/>
			<Slider
				Rack.Cell="C1 R1"
				TickFrequency="100"
				TickPlacement="TopLeft"
				Minimum="{StoreBinding StoreKey=p:MusicalPresenter, Path=Spectrum.Frequency.Threshold.Lower}"
				Maximum="{StoreBinding StoreKey=p:MusicalPresenter, Path=Spectrum.Frequency.Threshold.Upper}"
				Value="{Binding Frequency}"
				/>
			<Slider
				Rack.Cell="C2 R1"
				TickFrequency="0.207"
				TickPlacement="TopLeft"
				Minimum="{StaticResource NegativeSinglePi}"
				Maximum="{StaticResource PositiveSinglePi}"
				Value="{Binding Phase}"
				/>

			<Field
				Rack.Cell="C0 R0"
				ToolTip="{Binding Magnitude}"
				Text="{Binding Magnitude, Converter={StaticResource DoubleToStringTwoWayConverter}, UpdateSourceTrigger=PropertyChanged}"
				/>
			<Field
				Rack.Cell="C1 R0"
				ToolTip="{Binding Frequency}"
				Text="{Binding Frequency, Converter={StaticResource DoubleToStringTwoWayConverter}, UpdateSourceTrigger=PropertyChanged}"
				/>
			<Picker
				Rack.Cell="C1 R0"
				HorizontalAlignment="Left"
				ItemTemplate="{StaticResource NoteNameToFrequencyTemplate}"
				ItemsSource="{StoreBinding StoreKey=p:MusicalPresenter, Path=Music.PianoKeys}"
				SelectedValue="{Binding Frequency, Mode=TwoWay}"
				SelectedValuePath="EthalonFrequency"
				Height="22"
				Width="20"
				/>
			<Rack
				Rack.Cell="C2 R0"
				Columns="* * *"
				>
				<Field
					Rack.Cell="C0 CS0"
					ToolTip="{Binding Phase}"
					Text="{Binding Phase, Converter={StaticResource DoubleToStringTwoWayConverter}, UpdateSourceTrigger=PropertyChanged}"
					/>
				<Field
					Rack.Cell="C0"
					ToolTip="{Binding Phase, Converter={StaticResource RadianDegreeConverter}}"
					Text="{Binding Phase, Converter={StaticResource RadianDegreeFormattedConverter}, UpdateSourceTrigger=PropertyChanged}"
					/>
				<Field
					Rack.Cell="C1"
					ToolTip="{Binding Phase, Converter={StaticResource RadianPiConverter}}"
					Text="{Binding Phase, Converter={StaticResource RadianPiFormattedConverter}, UpdateSourceTrigger=PropertyChanged}"
					/>
			</Rack>
			<Field
				Rack.Cell="C3 R2"
				ToolTip="{Localizing Gap}"
				Text="{Binding Gap, Converter={StaticResource DoubleToStringTwoWayConverter}, UpdateSourceTrigger=PropertyChanged}"
				/>
			<Picker
				Rack.Cell="C3 R0"
				ItemsSource="{Binding BasisFuncs}"
				SelectedItem="{Binding BasisFunc, Mode=TwoWay}"
				ItemTemplate="{StaticResource DelegateToNameTemplate}"
				/>
			<Picker
				Rack.Cell="C4 R0"
				ItemsSource="{Enum Type=m:PhaseMode}"
				SelectedItem="{Binding PhaseMode, Mode=TwoWay}"
				/>

			<Switch
				Rack.Cell="C5 R0"
				HorizontalAlignment="Center"
				ToolTip="{Binding IsEnabled, Converter={StaticResource SoundToTitleConverter}}"
				IsToggled="{Binding IsEnabled, Mode=TwoWay}"
				/>

			<Expander
				Margin="4"
				Rack.Cell="C6 R0"
				HorizontalAlignment="Center"
				x:Name="Expander"
				>
				<v:PopupView
					IsOpen="{Binding ElementName=Expander, Path=IsExpanded, Mode=TwoWay}"
					>
					<GroupBox
						BorderThickness="0"
						Background="{StaticResource TitleBrush}"
						>
						<Stack
							Orientation="Horizontal"
							HorizontalAlignment="Right"
							>
							<Button
								Content="📝"
								ToolTip="{Localizing Copy}"
								CommandParameter="{Binding}"
								Command="{Context Set.Create, StoreKey=vm:HarmonicManager, KeyPath=ActiveProfile}"
								/>
							<Button
								Content="✗"
								ToolTip="{Localizing Delete}"
								CommandParameter="{Binding}"
								Command="{Context Set.Delete, StoreKey=vm:HarmonicManager, KeyPath=ActiveProfile}"
								/>
						</Stack>
					</GroupBox>
				</v:PopupView>
			</Expander>
		</Rack>
	</DataTemplate>

	<DataTemplate
		x:Key="HarmonicHeaderTemplate"
		>
		<Rack
			Rack.Columns="48 96 96 96 *"
			>
			<Title
				Rack.Cell="C0"
				Text="{Localizing Note}"
				/>
			<Title
				Rack.Cell="C1"
				Text="{Localizing Ethalon}"
				/>
			<Title
				Rack.Cell="C2"
				Text="{Localizing Offset}"
				/>
			<Title
				Rack.Cell="C3"
				Text="{Localizing Frequency}"
				/>
			<Title
				Rack.Cell="C4"
				Text="{Localizing Magnitude}"
				/>
		</Rack>
	</DataTemplate>

	<DataTemplate
		x:Key="HarmonicOutTemplate"
		>
		<Rack
			Opacity="{Binding RelativeOpacity}"
			Rack.Columns="48 96 96 96 *"
			>
			<Title
				Rack.Cell="C0"
				FontWeight="Bold"
				Text="{Binding NoteName}"
				/>
			<Title
				Rack.Cell="C1"
				Ext.ToolTip="{Binding EthalonFrequency}"
				Text="{Binding EthalonFrequency, Converter={StaticResource DoubleToStringTwoWayConverter}}"
				/>
			<Border
				Rack.Cell="C2"
				CornerRadius="10"
				
				/>
			<Title
				Rack.Cell="C2"
				Ext.ToolTip="{Binding OffsetFrequency}"
				Text="{Binding OffsetFrequency, StringFormat='({0:+0.00;-0.00;0.00})'}"
				/>
			<Title
				Rack.Cell="C3"
				Ext.ToolTip="{Binding Harmonic.Frequency}"
				Text="{Binding Harmonic.Frequency, Converter={StaticResource DoubleToStringTwoWayConverter}}"
				/>
			<Title
				Rack.Cell="C4"
				Ext.ToolTip="{Binding Harmonic.Magnitude}"
				Text="{Binding Harmonic.Magnitude, Converter={StaticResource DoubleToStringTwoWayConverter}}"
				/>
		</Rack>
	</DataTemplate>

	<DataTemplate
		x:Key="ProfileHeaderTemplate">
		<Stack
			Orientation="Horizontal"
			>
			<Title
				Text="{Binding Title}"
				/>
			<!--<Button
				Content="✗"
				Command="{Context Set.Delete, StoreKey=local:Generator}"
				CommandParameter="{Binding}" />-->
		</Stack>
	</DataTemplate>

	<DataTemplate
		x:Key="TitleTemplate"
		>
		<Stack
			Style="{StaticResource TitlePanelStyle}"
			>
			<Title
				Text="{Localizing Profile}"
				/>
			<Rack>
				<Picker
					ItemsSource="{Binding Profiles}"
					ItemDisplayBinding="{Binding Title}"
					SelectedItem="{Binding ActiveProfile, Mode=TwoWay}"
					/>
				<Field
					Margin="4 4 22 4"
					Text="{Binding ActiveProfile.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					/>
			</Rack>
			<Button
				Content="➕"
				Command="{Context Set.Create}"
				/>
			<Button
				Content="➖"
				CommandParameter="{Binding Path=ActiveProfile}"
				Command="{Context Set.Delete, TrackedPath=CommandParameter}"
				/>
		</Stack>
	</DataTemplate>

	<ControlTemplate
		x:Key="TitleProfileTemplate"
		>
		<Stack
			Style="{StaticResource TitlePanelStyle}"
			>
			<Title
				Text="{Localizing Title}"
				/>
			<Field
				Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
				/>
			<Button
				Content="✗"
				CommandParameter="{Binding}"
				Command="{Context Set.Delete, TrackedPath=CommandParameter}"
				/>
		</Stack>
	</ControlTemplate>

	<ControlTemplate
		x:Key="ValuePickerTemplate">
		<Rack
			DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}">
			<Border
				Margin="2"
				CornerRadius="10"
				Background="{StaticResource TitleBrush}"
				/>
			<Expander
				x:Name="TemplateRoot">
				<Expander.Header>
					<Field
						Text="{Binding DataContext, Mode=TwoWay, Converter={StaticResource DoubleToStringTwoWayConverter}}"
						/>
				</Expander.Header>
				<v:PopupView
					IsOpen="{Binding IsExpanded, ElementName=TemplateRoot}">
					<v:ValuePicker
						Minimum="0"
						Maximum="1"
						Value="{Binding DataContext, Mode=TwoWay}"
						/>
				</v:PopupView>
			</Expander>
		</Rack>
	</ControlTemplate>

	<DataTemplate
		x:Key="ProcessingProfileTemplate"
		>
		<Rack
			Columns="* *"
			>

			<Rack
				Rack.Cell="C0"
				Rows="^ ^ ^"
				Columns="^ ^ ^ ^ ^ ^"
				VerticalAlignment="Center"
				HorizontalAlignment="Center"
				>
				<Title
					Rack.Cell="R1 C0"
					Text="{Localizing Input}"
					/>
				<Title
					Rack.Cell="R2 C0"
					Text="{Localizing Output}"
					/>
				<Title
					Rack.Cell="R0 C1"
					Text="{Localizing Device}"
					/>
				<Title
					Rack.Cell="R0 C2"
					Text="{Localizing Level}"
					/>
				<Title
					Rack.Cell="R0 C3"
					Text="{Localizing Buffers}"
					/>
				<Title
					Rack.Cell="R1 C4"
					Text="{Localizing Pcs}"
					/>

				<Picker
					Rack.Cell="R1 C1"
					MinWidth="210"
					Tag="{Localizing Input}"
					ItemsSource="{Binding InputDevices}"
					SelectedItem="{Binding ActiveInputDevice, Mode=TwoWay}"
					DisplayMemberPath="ProductName"
					/>
				<Picker
					Rack.Cell="R2 C1"
					MinWidth="210"
					ItemsSource="{Binding OutputDevices}"
					SelectedItem="{Binding ActiveOutputDevice, Mode=TwoWay}"
					DisplayMemberPath="ProductName"
					/>
				<ContentView
					Rack.Cell="R1 C2"
					DataContext="{Binding InputLevel, Mode=TwoWay}"
					Template="{StaticResource ValuePickerTemplate}"
					/>
				<ContentView
					Rack.Cell="R2 C2"
					DataContext="{Binding OutputLevel, Mode=TwoWay}"
					Template="{StaticResource ValuePickerTemplate}"
					/>
				<Picker
					Rack.Cell="R1 C3"
					ItemsSource="{StaticResource AllowedBuffersCount}"
					SelectedItem="{Binding BuffersCount, Mode=TwoWay}"
					/>
			</Rack>

			<Rack
				Rack.Cell="R1 C1"
				Rows="^ ^ ^ ^ ^ ^ ^ ^"
				Columns="^ ^ ^"
				VerticalAlignment="Center"
				HorizontalAlignment="Center"
				>
				<Title
					Rack.Cell="R0 C1"
					Text="{Localizing Sample}"
					/>
				<Title
					Rack.Cell="R1 C0"
					Text="{Localizing Window}"
					/>
				<Title
					Rack.Cell="R2 C0"
					Text="{Localizing Rate}"
					/>
				<Title
					Rack.Cell="R3 C1 CS2"
					Text="{Localizing Frame}"
					/>
				<Title
					Rack.Cell="R4 C0"
					Text="{Localizing Length}"
					/>

				<Title
					Rack.Cell="R2 C2"
					Text="{Localizing Hz}"
					/>
				<Title
					Rack.Cell="R4 C2"
					Text="{Localizing Pcs}"
					/>
				<Title
					Rack.Cell="R5 C2"
					Text="{Localizing ms}"
					/>
				<Title
					Rack.Cell="R6 C2"
					Text="{Localizing Hz}"
					/>
				<Title
					Rack.Cell="R7 C2"
					Text="{Localizing Hz}"
					/>

				<Picker
					Rack.Cell="R1 C1"
					ItemsSource="{Binding Windows}"
					SelectedItem="{Binding ActiveWindow, Mode=TwoWay}"
					ItemTemplate="{StaticResource DelegateToNameTemplate}"
					/>
				<Picker
					Rack.Cell="R2 C1"
					ItemsSource="{Binding SampleRates}"
					SelectedItem="{Binding SampleRate, Mode=TwoWay}" />

				<Stack
					Rack.Cell="R4 C1"
					Orientation="Horizontal"
					>
					<Title
						Text="2 ^"
						/>
					<Picker
						ItemsSource="{StaticResource AllowedPowsOf2}"
						SelectedItem="{Binding FramePow, Mode=TwoWay}"
						/>
					<Title
						Text="{Binding FrameSize, StringFormat='= {0}'}"
						/>
				</Stack>
				<Title
					Rack.Cell="R5 C0"
					Text="{Localizing Duration}"
					/>
				<Title
					Rack.Cell="R5 C1"
					HorizontalAlignment="Right"
					Text="{Binding FrameDuration.TotalMilliseconds}"
					/>
				<Title
					Rack.Cell="R6 C0"
					Text="{Localizing Step}"
					/>
				<Title
					Rack.Cell="R6 C1"
					HorizontalAlignment="Right"
					ToolTip="{Binding FrameStep}"
					Text="{Binding FrameStep, Converter={StaticResource DoubleToStringTwoWayConverter}}"
					/>
				<Title
					Rack.Cell="R7 C0"
					Text="{Localizing Accuracy}"
					/>
				<Title
					Rack.Cell="R7 C1"
					HorizontalAlignment="Right"
					ToolTip="{Binding Accuracy, StringFormat='±{0}'}"
					Text="{Binding Accuracy, StringFormat='±{0}', Converter={StaticResource DoubleToStringTwoWayConverter}}"
					/>
			</Rack>
		</Rack>
	</DataTemplate>

	<DataTemplate
		x:Key="HarmonicProfileTemplate">
		<Stack>
			<Expander
				Margin="0 -32 0 0"
				x:Name="Expander"
				HorizontalAlignment="Right"
				>
				<Expander.Header>
					<Title
						Text="{Localizing Each}"
						/>
				</Expander.Header>
				<v:PopupView
					IsOpen="{Binding ElementName=Expander, Path=IsExpanded}">
					<Stack
						Orientation="Horizontal"
						>
						<GroupBox
							BorderThickness="0"
							Background="{StaticResource TitleBrush}"
							Header="{Localizing Mode}"
							>
							<Stack
								Orientation="Vertical"
								>
								<Button
									Command="{Context Loop, TrackedPath=DataContext}"
									Content="{Localizing Loop}"
									/>
								<Button
									Command="{Context Flow, TrackedPath=DataContext}"
									Content="{Localizing Flow}"
									/>
							</Stack>
						</GroupBox>
						<GroupBox
							BorderThickness="0"
							Background="{StaticResource TitleBrush}"
							Header="{Localizing Sound}"
							>
							<Stack
								Orientation="Vertical"
								>
								<Button
									Command="{Context Mute, TrackedPath=DataContext}"
									Content="{Localizing Mute}"
									/>
								<Button
									Command="{Context Loud, TrackedPath=DataContext}"
									Content="{Localizing Loud}"
									/>
							</Stack>
						</GroupBox>
					</Stack>
				</v:PopupView>
			</Expander>
			<Rack
				Columns="2* 3* 3* * * * *"
				Rows="* *">
				<Title
					Rack.Cell="C0"
					Text="{Localizing Magnitude}"
					/>
				<Title
					Rack.Cell="C1"
					Text="{Localizing Frequency}"
					/>
				<Title
					Rack.Cell="C1"
					Opacity="0.35"
					HorizontalAlignment="Right"
					Text="{Localizing Hz}"
					/>
				<Title
					Rack.Cell="C2"
					Text="{Localizing Phase}"
					/>
				<Title
					Rack.Cell="C2"
					Opacity="0.35"
					HorizontalAlignment="Right"
					Text="{Localizing Rad}"
					/>
				<Title
					Rack.Cell="C3"
					Text="{Localizing Basis}"
					/>
				<Title
					Rack.Cell="C4"
					Text="{Localizing Mode}"
					/>
				<Title
					Rack.Cell="C5"
					Text="{Localizing Sound}"
					/>
				<Title
					Rack.Cell="C6"
					Text="{Localizing Action}"
					/>
			</Rack>

			<ItemsView
				ItemsSource="{Binding Harmonics}"
				ItemTemplate="{StaticResource HarmonicTemplate}"
				/>
			<Button
				HorizontalAlignment="Center"
				Content="{Localizing Create, StringFormat='{}{0} ➕', ForceStringFormat=True}"
				Command="{Context Set.Create, TrackedPath=DataContext}"
				/>
		</Stack>
	</DataTemplate>
	
	<DataTemplate
		x:Key="RangeRackTemplate">

		<Rack
			Rows="^ ^ ^"
			Columns="^ ^ ^ ^"
			HorizontalAlignment="Center">

			<Title
				Rack.Cell="R0 C1"
				Text="{Localizing Upper}" />
			<Title
				Rack.Cell="R0 C2"
				Text="{Localizing Lower}" />
			<Title
				Rack.Cell="R0 C3"
				Opacity="{StaticResource InfoTextOpacityLevel}"
				Text="{Localizing Length}" />

			<Title
				Rack.Cell="R2 C0"
				Text="{Localizing Threshold}" />
			<Title
				Rack.Cell="R1 C0"
				Text="{Localizing Limit}" />

			<Field
				Rack.Cell="R2 C1"
				ToolTip="{Binding Threshold.Upper}"
				Text="{Binding Threshold.Upper, Mode=TwoWay, Converter={StaticResource DoubleToStringTwoWayConverter}}" />
			<Field
				Rack.Cell="R2 C2"
				ToolTip="{Binding Threshold.Lower}"
				Text="{Binding Threshold.Lower, Mode=TwoWay, Converter={StaticResource DoubleToStringTwoWayConverter}}" />
			<Field
				Rack.Cell="R1 C1"
				ToolTip="{Binding Limit.Upper}"
				Text="{Binding Limit.Upper, Mode=TwoWay, Converter={StaticResource DoubleToStringTwoWayConverter}}" />
			<Field
				Rack.Cell="R1 C2"
				ToolTip="{Binding Limit.Lower}"
				Text="{Binding Limit.Lower, Mode=TwoWay, Converter={StaticResource DoubleToStringTwoWayConverter}}" />

			<Field
				Rack.Cell="R2 C3"
				Style="{StaticResource ReadOnlyFieldStyle}"
				Opacity="{StaticResource InfoTextOpacityLevel}"
				ToolTip="{Binding Threshold.Length}"
				Text="{Binding Threshold.Length, Mode=OneWay, Converter={StaticResource DoubleToStringTwoWayConverter}}" />
			<Field
				Rack.Cell="R1 C3"
				Style="{StaticResource ReadOnlyFieldStyle}"
				Opacity="{StaticResource InfoTextOpacityLevel}"
				ToolTip="{Binding Limit.Length}"
				Text="{Binding Limit.Length, Mode=OneWay, Converter={StaticResource DoubleToStringTwoWayConverter}}" />
		</Rack>

	</DataTemplate>

	<DataTemplate
		x:Key="RangeTemplate">
		<Stack
			HorizontalAlignment="Stretch">

			<ContentPresenter
				Content="{Binding}"
				ContentTemplate="{StaticResource RangeRackTemplate}" />

			<c:RangeBar
				Maximum="{Binding Limit.Upper, Mode=TwoWay}"
				Minimum="{Binding Limit.Lower, Mode=TwoWay}"
				SelectionEnd="{Binding Threshold.Upper, Mode=TwoWay}"
				SelectionStart="{Binding Threshold.Lower, Mode=TwoWay}" />

			<Stack
				Orientation="Horizontal"
				HorizontalAlignment="Center">

				<Title
					Text="{Localizing Scale}" />

				<Picker
					ItemsSource="{Binding VisualScaleFuncs}"
					SelectedItem="{Binding VisualScaleFunc, Mode=TwoWay}"
					ItemTemplate="{StaticResource DelegateToNameTemplate}"
					/>

			</Stack>

		</Stack>
	</DataTemplate>

	<DataTemplate
		x:Key="MusicOptionsTemplate"
		>
		<Rack
			Rows="^ ^"
			Columns="^ ^ ^ ^">
			<Title
				Rack.Cell="R0 C0"
				Text="{Localizing Standard, StringFormat='{}{0} [A1]'}"
				/>
			<Field
				Rack.Cell="R0 C1"
				Text="{Binding ActivePitchStandard, Mode=TwoWay}"
				/>
			<!--<Pick
				Rack.Cell="R0 C2"
				ItemsSource="{Binding PitchStandards}"
				ActiveItem="{Binding ActivePitchStandard, Mode=TwoWay}"
				/>-->
			<Title
				Rack.Cell="R0 C2"
				Text="{Localizing Hz}"
				/>
			<Title
				Rack.Cell="R1 C0"
				Text="{Localizing Notation}"
				/>
			<Picker
				Rack.Cell="R1 C1"
				ItemsSource="{Binding Notations}"
				SelectedItem="{Binding ActiveNotation, Mode=TwoWay}"
				ItemTemplate="{StaticResource LocalizingTemplate}"
				/>
			<Title
				Rack.Cell="R1 C2"
				Text="{Binding ActiveNotation, Converter={StaticResource NotationConverter}}"
				/>
			<!--<Label
				Rack.Cell="C7"
				Text="{Localizing Peak}"
				/>-->
			<!--<Item
				Rack.Cell="C8"
				BindingContext="{Binding Resources[Visibility.Peak], Mode=TwoWay, Source={x:Static local:App.Current}}"
				Template="{StaticResource VisibilityTemplate}"
				/>-->
		</Rack>
	</DataTemplate>

	<DataTemplate
		x:Key="GeometryTemplate"
		>
		<Rack
			Rows="^ ^ ^"
			Columns="^ ^ * *"
			>
			<Title
				Rack.Cell="R0 C2"
				Text="{Localizing Approximation}"
				/>
			<Title
				Rack.Cell="R0 C2"

				Text="{Localizing Pcs}"
				/>

			<Title
				Rack.Cell="R1 C0"
				Text="🌸"
				/>
			<Title
				Rack.Cell="R1 C1"
				Text="{Localizing Flower}"
				/>
			<Rack
				Rack.Cell="R1 C2"
				Rows="^ *"
				>
				<Field
					Rack.Cell="R0"
					Alignment.X="Center"
					TextAlignment="Center"
					Text="{Binding FlowerApproximationLevel, Mode=TwoWay, Converter={StaticResource DoubleToStringTwoWayConverter}}"
					/>
				<Slider
					Rack.Cell="R1"
					Maximum="+8.0"
					Minimum="-2.0"
					Value="{Binding FlowerApproximationLevel, Mode=TwoWay, Converter={StaticResource ScaleValueConverter}}"
					/>
			</Rack>
			<!--<Title
				Rack.Cell="R1 C2"
				Opacity="0.35"
				Alignment.X="Till"
				Alignment.Y="From"
				Text="{Binding FlowerApproximationLevel, Converter={Converter Convert=LevelToPointsCount}}"
				/>-->

			<Title
				Rack.Cell="R2 C0"
				Text="🌀"
				/>
			<Title
				Rack.Cell="R2 C1"
				Text="{Localizing Spiral}"
				/>
			<Rack
				Rack.Cell="R2 C2"
				Rows="^ *"
				>
				<Field
					Rack.Cell="R0"
					Alignment.X="Center"
					TextAlignment="Center"
					Text="{Binding SpiralApproximationLevel, Mode=TwoWay, Converter={StaticResource DoubleToStringTwoWayConverter}}"
					/>
				<Slider
					Rack.Cell="R1"
					Maximum="+8.0"
					Minimum="-2.0"
					Value="{Binding SpiralApproximationLevel, Mode=TwoWay, Converter={StaticResource ScaleValueConverter}}"
					/>
			</Rack>
			<!--<Title
				Rack.Cell="R2 C2"
				Opacity="0.35"
				Alignment.X="Till"
				Alignment.Y="From"
				Text="{Binding SpiralApproximationLevel, Converter={Converter Convert=LevelToPointsCount}}"
				/>-->
		</Rack>
	</DataTemplate>

	<DataTemplate
		x:Key="FormattingTemplate">
		<Rack
			Rows="* *"
			Columns="^ ^ ^"
			>
			<Title
				Rack.Cell="R1 C0"
				Text="{Localizing Numeric}" />
			<Title
				Rack.Cell="R0 C1"
				Text="{Localizing Monitor}" />
			<Picker
				Rack.Cell="R1 C1"
				HorizontalAlignment="Center"
				ItemsSource="{Binding NumericFormats}"
				SelectedItem="{Binding MonitorNumericFormat, Mode=TwoWay}" />
			<Title
				Rack.Cell="R0 C2"
				Text="{Localizing Screen}" />
			<Picker
				Rack.Cell="R1 C2"
				HorizontalAlignment="Center"
				ItemsSource="{Binding NumericFormats}"
				SelectedItem="{Binding ScreenNumericFormat, Mode=TwoWay}" />
		</Rack>
	</DataTemplate>

	<DataTemplate
		x:Key="NamedColorTemplate">
		<Stack
			Orientation="Horizontal">
			<Border
				Style="{StaticResource FrameStyle}"
				Background="{Binding Value}" />
			<Title
				Text="{Binding Value}" />
			<Title
				Text="{Binding Key}" />
		</Stack>
	</DataTemplate>

	<DataTemplate
		x:Key="BrushPreviewTemplate">
		<Rack
			Width="26"
			Height="26">
			<Border
				Rack.Cell="C1"
				CornerRadius="10"
				Background="{StaticResource ChessBrush}" />
			<Border
				Rack.Cell="C1"
				CornerRadius="10"
				Background="{Binding}" />
		</Rack>
	</DataTemplate>

	<ControlTemplate
		x:Key="ZIndexTemplate">
		<Rack
			DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}">
			<Border
				Margin="2"

				Background="{StaticResource TitleBrush}"
				/>
			<Field
				VerticalAlignment="Center"
				HorizontalAlignment="Center"
				Text="{Binding DataContext, Mode=TwoWay, Converter={StaticResource Int32ToStringTwoWayConverter}}"
				/>
		</Rack>
	</ControlTemplate>

	<ControlTemplate
		x:Key="RangePickerTemplate">
		<Rack>
			<Border
				Margin="2"
				CornerRadius="10"
				Background="{StaticResource TitleBrush}"
				/>
			<Expander
				x:Name="TemplateRoot">
				<Expander.Header>
					<Rack
						Rows="* *"
						Columns="^ ^ ^"
						DataContext="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}">
						<Field
							Rack.Cell="R0 C0"
							ToolTip="{Binding Threshold.Upper}"
							Text="{Binding Threshold.Upper, Converter={StaticResource DoubleToStringTwoWayConverter}}"
							/>
						<Title
							Rack.Cell="R0 C1"
							Text="-"
							/>
						<Field
							Rack.Cell="R0 C2"
							ToolTip="{Binding Threshold.Lower}"
							Text="{Binding Threshold.Lower, Converter={StaticResource DoubleToStringTwoWayConverter}}"
							/>
						<Title
							Rack.Cell="R1 C1"
							Text="="
							/>
						<Field
							Rack.Cell="R1 C2"
							Style="{StaticResource ReadOnlyFieldStyle}"
							ToolTip="{Binding Threshold.Length}"
							Text="{Binding Threshold.Length, Mode=OneWay, Converter={StaticResource DoubleToStringTwoWayConverter}}"
							/>
					</Rack>
				</Expander.Header>
				<v:PopupView
					IsOpen="{Binding IsExpanded, ElementName=TemplateRoot}">
					<ContentPresenter
						Content="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"
						ContentTemplate="{StaticResource RangeTemplate}"
						/>
				</v:PopupView>
			</Expander>
		</Rack>
	</ControlTemplate>

	<ControlTemplate
		x:Key="VisibilityTemplate">
		<Rack>
			<Border
				Rack.Cell="C0 CS2"
				Margin="2"
				CornerRadius="10"
				Background="{StaticResource TitleBrush}"
				/>
			<Switch
				Rack.Cell="R1 C1"
				VerticalAlignment="Center"
				HorizontalAlignment="Center"
				IsToggled="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay, Converter={StaticResource IsVisibleConverter}}"
				/>
		</Rack>
	</ControlTemplate>

	<ControlTemplate
		x:Key="ColorValueTemplate">
		<Expander
			x:Name="Root">
			<Expander.Header>
				<Rack>
					<Border
						CornerRadius="10"
						Background="LightGray" />
					<Border
						CornerRadius="10"
						Background="{StaticResource ChessBrush}" />
					<Border
						CornerRadius="10"
						Background="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ColorToSolidBrushConverter}}" />
					<Field
						Margin="10 4"
						Text="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay, Converter={StaticResource ColorToStringTwoWayConverter}}" />
				</Rack>
			</Expander.Header>
			<v:PopupView
				IsOpen="{Binding IsExpanded, ElementName=Root}">
				<v:ColorPicker
					Value="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" />
			</v:PopupView>
		</Expander>
	</ControlTemplate>

	<ControlTemplate
		x:Key="BrushPickerTemplate">
		<Rack
			Columns="^ *">
			<Border
				Rack.Cell="C0 CS2"
				Margin="2"
				CornerRadius="10"
				Background="{StaticResource TitleBrush}"
				/>
			<Expander
				Rack.Cell="C0"
				x:Name="Root"
				Header="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"
				HeaderTemplate="{StaticResource BrushPreviewTemplate}">
				<v:PopupView
					IsOpen="{Binding IsExpanded, ElementName=Root}">
					<v:BrushPicker
						Value="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
						/>
				</v:PopupView>
			</Expander>
			<Picker
				Rack.Cell="C1"
				Width="17"
				Height="17"
				SelectedValuePath="Value"
				ItemsSource="{Binding Resources.MergedDictionaries[4], Source={x:Static local:App.Current}}"
				SelectedValue="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}">
				<Picker.ItemTemplate>
					<DataTemplate>
						<Stack
							Orientation="Horizontal">
							<Border
								Background="{Binding ChessBrush}">
								<Border
									Style="{StaticResource FrameStyle}"
									Background="{Binding Value}" />
							</Border>
							<Field
								IsReadOnly="True"
								Text="{Binding Key}" />
						</Stack>
					</DataTemplate>
				</Picker.ItemTemplate>
			</Picker>
		</Rack>
	</ControlTemplate>

	<DataTemplate
		x:Key="VisualizationProfileTemplate">
		<Rack>
			<ItemsView
				Background="Transparent"
				DataContext="{Binding Resources, Source={x:Static local:App.Current}}"
				ItemsSource="{StaticResource VisualizationSet}"
				/>
			<Rack
				Background="#55FFFFFF"
				Visibility="{StoreBinding StoreKey=vm:VisualizationManager, Path=ActiveProfile.IsBusy, Converter={StaticResource TrueToVisibleConverter}}"
				>
				<Title
					Text="⏳"
					Padding="16"
					Margin="16 64"
					FontSize="64"
					VerticalAlignment="Top"
					HorizontalAlignment="Center"
					Foreground="{StaticResource SpectrogramBackgroundBrush}"
					/>
			</Rack>
		</Rack>
	</DataTemplate>

	<DataTemplate
		x:Key="WindowMenuTemplate"
		>
		<Rack
			Rows="^ ^ ^ ^ ^"
			Columns="^ ^ ^"
			DataContext="{Store vm:AppViewModel}"
			>
			<Title
				Rack.Cell="R1 C1"
				FontSize="20"
				Foreground="{StaticResource SpectrogramBackgroundBrush}"
				ToolTip="{Localizing Visible}"
				Text="🗔"
				/>
			<Title
				Rack.Cell="R1 C2"
				FontSize="20"
				Foreground="{StaticResource SpectrogramBackgroundBrush}"
				ToolTip="{Localizing Topmost}"
				Text="📌"
				/>

			<Title
				Rack.Cell="R2 C0"
				FontSize="20"
				Foreground="{StaticResource SpectrogramBackgroundBrush}"
				ToolTip="{Localizing Flower}"
				Text="🌸"
				/>
			<Switch
				Rack.Cell="R2 C1"
				IsChecked="{Binding Visibility, Source={x:Static local:AppView.FlowerView}, Mode=TwoWay, Converter={StaticResource IsVisibleConverter}}"
				/>
			<Switch
				Rack.Cell="R2 C2"
				Opacity="0.5"
				IsChecked="{Binding Topmost, Source={x:Static local:AppView.FlowerView}, Mode=TwoWay, Converter={StaticResource TrueToTrueConverter}}"
				/>

			<Title
				Rack.Cell="R3 C0"
				FontSize="20"
				Foreground="{StaticResource SpectrogramBackgroundBrush}"
				ToolTip="{Localizing Tape}"
				Text="📼"
				/>
			<Switch
				Rack.Cell="R3 C1"
				IsChecked="{Binding Visibility, Source={x:Static local:AppView.TapeView}, Mode=TwoWay, Converter={StaticResource IsVisibleConverter}}"
				/>
			<Switch
				Rack.Cell="R3 C2"
				Opacity="0.5"
				IsChecked="{Binding Topmost, Source={x:Static local:AppView.TapeView}, Mode=TwoWay, Converter={StaticResource TrueToTrueConverter}}"
				/>

			<Title
				Rack.Cell="R4 C0"
				FontSize="20"
				Foreground="{StaticResource SpectrogramBackgroundBrush}"
				ToolTip="{Localizing Monitor}"
				Text="🎚️"
				/>
			<Switch
				Rack.Cell="R4 C1"
				IsChecked="{Binding Visibility, Source={x:Static local:AppView.MonitorView}, Mode=TwoWay, Converter={StaticResource IsVisibleConverter}}"
				/>
			<Switch
				Rack.Cell="R4 C2"
				Opacity="0.5"
				IsChecked="{Binding Topmost, Source={x:Static local:AppView.MonitorView}, Mode=TwoWay, Converter={StaticResource TrueToTrueConverter}}"
				/>
		</Rack>
	</DataTemplate>

	<DataTemplate
		x:Key="MenuTemplate"
		>
		<Rack
			Margin="-22 0 0 0"
			Rows="^ ^ ^ ^ ^"
			Columns="^ ^ ^"
			DataContext="{Store vm:AppViewModel}"
			>
			<GroupBox
				Rack.Cell="R0 C0 CS0"
				BorderThickness="0"
				HorizontalAlignment="Right"
				Background="{StaticResource TitleBrush}"
				>
				<Rack
					Margin="0 5 0 0"
					Rows="* *"
					Columns="* *"
					>
					<Button
						Rack.Cell="R0 C0"
						Opacity="0.5"
						Command="{Context LoadActiveFrame, StoreKey=vm:AppViewModel}"
						ToolTip="{Localizing Load}"
						Content="📂"
						/>
					<Button
						Rack.Cell="R0 C1"
						Opacity="0.5"
						Command="{Context SaveActiveFrame, StoreKey=vm:AppViewModel}"
						ToolTip="{Localizing Save}"
						Content="💾"
						/>
					<Switch
						Rack.Cell="R1 C0"
						IsChecked="{StoreBinding Path=IsPaused, StoreKey=vm:ProcessingManager, Mode=TwoWay}"
						/>
					<Title
						Rack.Cell="R1 C1"
						Foreground="{StaticResource SpectrogramBackgroundBrush}"
						ToolTip="{Localizing Frame}"
						FontSize="20"
						Text="📷"
						/>
				</Rack>
			</GroupBox>

			<GroupBox
				Rack.Cell="R1 C0 RS0 CS0"
				BorderThickness="0"
				Background="{StaticResource TitleBrush}"
				ContentTemplate="{StaticResource WindowMenuTemplate}"
				/>
		</Rack>
	</DataTemplate>

</ResourceDictionary>